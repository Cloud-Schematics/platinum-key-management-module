// This file was generated by tfxjs
const tfxjs = require("tfxjs");
const tfx = new tfxjs("example_module", {});

tfx.plan("Example Key Management Module Resources", () => {
  tfx.module(
    "Key Management",
    "module.key_management",
    tfx.resource(
      "Kms Block Storage Policy 0",
      "ibm_iam_authorization_policy.kms_block_storage_policy[0]",
      {
        description:
          "Allow block storage volumes to be encrypted by Key Management instance.",
        roles: ["Reader", "Authorization Delegator"],
        source_resource_type: "share",
        source_service_name: "is",
        target_service_name: "kms",
      }
    ),
    tfx.resource(
      "Kms Server Protect Policy 0",
      "ibm_iam_authorization_policy.kms_server_protect_policy[0]",
      {
        description:
          "Allow block storage volumes to be encrypted by Key Management instance.",
        roles: ["Reader"],
        source_service_name: "server-protect",
        target_service_name: "kms",
      }
    ),
    tfx.resource(
      "Encryption Key Atracker Key",
      'ibm_kms_key.encryption_key["atracker-key"]',
      {
        endpoint_type: "public",
        force_delete: true,
        key_name: "dev-atracker-key",
        key_ring_id: "dev-kms-ring",
        standard_key: false,
      }
    ),
    tfx.resource(
      "Encryption Key Icd Key",
      'ibm_kms_key.encryption_key["icd-key"]',
      {
        endpoint_type: "public",
        force_delete: true,
        key_name: "dev-icd-key",
        key_ring_id: "dev-kms-ring",
        standard_key: false,
      }
    ),
    tfx.resource("Encryption Key Key", 'ibm_kms_key.encryption_key["key"]', {
      endpoint_type: "public",
      force_delete: true,
      key_name: "dev-key",
      key_ring_id: "dev-kms-ring",
      standard_key: false,
    }),
    tfx.resource(
      "Encryption Key Roks Key",
      'ibm_kms_key.encryption_key["roks-key"]',
      {
        endpoint_type: "public",
        force_delete: true,
        key_name: "dev-roks-key",
        key_ring_id: "dev-kms-ring",
        standard_key: false,
      }
    ),
    tfx.resource(
      "Encryption Key Vsi Volume Key",
      'ibm_kms_key.encryption_key["vsi-volume-key"]',
      {
        endpoint_type: "public",
        force_delete: true,
        key_name: "dev-vsi-volume-key",
        key_ring_id: "dev-kms-ring",
        standard_key: false,
      }
    ),
    tfx.resource(
      "Kms Key Key Policy Atracker Key",
      'ibm_kms_key_policies.kms_key_key_policy["atracker-key"]',
      {
        dual_auth_delete: [
          {
            enabled: false,
          },
        ],
        endpoint_type: "public",
        rotation: [
          {
            enabled: true,
            interval_month: 1,
          },
        ],
      }
    ),
    tfx.resource(
      "Kms Key Key Policy Icd Key",
      'ibm_kms_key_policies.kms_key_key_policy["icd-key"]',
      {
        dual_auth_delete: [
          {
            enabled: false,
          },
        ],
        endpoint_type: "public",
        rotation: [
          {
            enabled: true,
            interval_month: 1,
          },
        ],
      }
    ),
    tfx.resource(
      "Kms Key Key Policy Key",
      'ibm_kms_key_policies.kms_key_key_policy["key"]',
      {
        dual_auth_delete: [
          {
            enabled: false,
          },
        ],
        endpoint_type: "public",
        rotation: [
          {
            enabled: true,
            interval_month: 1,
          },
        ],
      }
    ),
    tfx.resource(
      "Kms Key Key Policy Roks Key",
      'ibm_kms_key_policies.kms_key_key_policy["roks-key"]',
      {
        dual_auth_delete: [
          {
            enabled: false,
          },
        ],
        endpoint_type: "public",
        rotation: [
          {
            enabled: true,
            interval_month: 1,
          },
        ],
      }
    ),
    tfx.resource(
      "Kms Key Key Policy Vsi Volume Key",
      'ibm_kms_key_policies.kms_key_key_policy["vsi-volume-key"]',
      {
        dual_auth_delete: [
          {
            enabled: false,
          },
        ],
        endpoint_type: "public",
        rotation: [
          {
            enabled: true,
            interval_month: 1,
          },
        ],
      }
    ),
    tfx.resource("Ring", "ibm_kms_key_rings.ring", {
      key_ring_id: "dev-kms-ring",
    }),
    tfx.resource("Kms 0", "ibm_resource_instance.kms[0]", {
      location: "us-south",
      name: "dev-kms",
      plan: "tiered-pricing",
      service: "kms",
      tags: ["hello", "world"],
    })
  );
});
